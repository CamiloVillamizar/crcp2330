function rect.new 0
push constant 9
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 3
push constant 0
pop this 4
push constant 0
not
pop this 5
push constant 0
pop this 6
push constant 0
pop this 8
push pointer 0
call rect.draw 1
pop temp 0
push pointer 0
return
function rect.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function rect.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function rect.moveRight 0
push argument 0
pop pointer 0
push this 0
push this 2
add
push constant 510
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call rect.erase 1
pop temp 0
push this 0
push constant 20
add
pop this 0
push pointer 0
call rect.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function rect.moveLeft 0
push argument 0
pop pointer 0
push this 0
push constant 10
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call rect.erase 1
pop temp 0
push this 0
push constant 20
sub
pop this 0
push pointer 0
call rect.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function rect.moveSLeft 0
push argument 0
pop pointer 0
push this 0
push constant 10
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call rect.erase 1
pop temp 0
push this 0
push constant 20
sub
pop this 0
push pointer 0
call rect.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function rect.moveUp 0
push argument 0
pop pointer 0
push this 1
push constant 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call rect.erase 1
pop temp 0
push this 1
push constant 20
sub
pop this 1
push pointer 0
call rect.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function rect.moveDown 0
push argument 0
pop pointer 0
push this 1
push this 3
add
push constant 240
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call rect.erase 1
pop temp 0
push this 1
push constant 20
add
pop this 1
push pointer 0
call rect.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function rect.jump 0
push argument 0
pop pointer 0
push this 6
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop this 4
label IF_FALSE0
push this 6
push constant 30
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push pointer 0
call rect.erase 1
pop temp 0
push this 1
push constant 3
sub
pop this 1
push pointer 0
call rect.draw 1
pop temp 0
label IF_FALSE1
push this 6
push constant 30
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push pointer 0
call rect.erase 1
pop temp 0
push this 1
push constant 3
add
pop this 1
push pointer 0
call rect.draw 1
pop temp 0
label IF_FALSE2
push this 6
push constant 60
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 1
pop this 6
label IF_FALSE3
push constant 0
return
function rect.getX 0
push argument 0
pop pointer 0
push this 0
return
function rect.setX 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push constant 0
return
function rect.getY 0
push argument 0
pop pointer 0
push this 1
return
function rect.reset 1
push argument 0
pop pointer 0
push pointer 0
call rect.erase 1
pop temp 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
not
not
if-goto WHILE_END0
push this 6
call Random.new 1
pop this 7
push this 7
push constant 500
call Math.divide 2
pop this 7
push this 7
push constant 100
add
pop this 7
push this 6
push constant 5
call Math.multiply 2
pop this 0
push this 0
push constant 50
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push constant 300
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 0
label IF_FALSE1
label IF_FALSE0
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 0
label WHILE_EXP1
push local 0
not
not
if-goto WHILE_END1
push this 6
call Random.new 1
pop this 7
push this 7
push constant 500
call Math.divide 2
pop this 7
push this 7
push constant 100
add
pop this 7
push this 6
push constant 5
call Math.multiply 2
push constant 30
add
pop this 1
push this 1
push constant 50
gt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 1
push constant 300
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
pop local 0
label IF_FALSE3
label IF_FALSE2
goto WHILE_EXP1
label WHILE_END1
push pointer 0
call rect.draw 1
pop temp 0
push constant 0
return
function rect.incCtr 0
push argument 0
pop pointer 0
push this 6
push constant 60
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 6
goto IF_END0
label IF_FALSE0
push this 6
push constant 1
add
pop this 6
label IF_END0
push constant 0
return
function rect.getCtr 0
push argument 0
pop pointer 0
push this 6
return
function rect.incScore 0
push argument 0
pop pointer 0
push this 8
push constant 1
add
pop this 8
push constant 0
return
function rect.getScore 0
push argument 0
pop pointer 0
push this 8
return
