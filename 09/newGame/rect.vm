function rect.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 3
push pointer 0
call rect.draw 1
pop temp 0
push pointer 0
return
function rect.draw 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function rect.erase 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 2
add
push this 1
push this 3
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function rect.moveRight 0
push argument 0
pop pointer 0
push this 0
push this 2
add
push constant 510
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call rect.erase 1
pop temp 0
push this 0
push constant 20
add
pop this 0
push pointer 0
call rect.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function rect.moveLeft 0
push argument 0
pop pointer 0
push this 0
push constant 10
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call rect.erase 1
pop temp 0
push this 0
push constant 20
sub
pop this 0
push pointer 0
call rect.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function rect.moveUp 0
push argument 0
pop pointer 0
push this 1
push constant 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call rect.erase 1
pop temp 0
push this 1
push constant 5
sub
pop this 1
push pointer 0
call rect.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function rect.moveDown 0
push argument 0
pop pointer 0
push this 1
push this 3
add
push constant 254
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push pointer 0
call rect.erase 1
pop temp 0
push this 1
push constant 5
add
pop this 1
push pointer 0
call rect.draw 1
pop temp 0
label IF_FALSE0
push constant 0
return
function rect.jump 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 20
lt
not
if-goto WHILE_END0
push pointer 0
call rect.moveUp 1
pop temp 0
push constant 10
call Sys.wait 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
gt
not
if-goto WHILE_END1
push pointer 0
call rect.moveDown 1
pop temp 0
push constant 20
call Sys.wait 1
pop temp 0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP1
label WHILE_END1
push constant 0
return
